[CRAB]

jobtype = cmssw
scheduler = remoteGlidein
use_server = 0

[CMSSW]
datasetpath=/BdToPsi2SKPi_MSEL5_TuneZ2star_8TeV-pythia6/Summer12DR53X-PU_RD2_START53_V19F_ext1-v1/AODSIM
# dbs_url=http://cmsdbsprod.cern.ch/cms_dbs_ph_analysis_01/servlet/DBSServlet


#get_edm_output = 1
pset=./runMuMuPiKPAT_dataOrMC_09Apr.py

### Splitting parameters
total_number_of_events=-1
#events_per_job = 3000 # Nicola
events_per_job = 1
# number_of_jobs = 500 # Nicola

### The output files (comma separated list)
#output_file = Zprime.root

[USER]
return_data = 0
#copy_data = 1
#storage_element=srm-cms.cern.ch
#storage_pool=None 
#storage_path = /castor/cern.ch
#user_remote_dir=user/b/botta/HiggsAnalysis/PreselNoCut_DATA/GOODCOLLv9


### OUTPUT files Management
##  output back into UI
#return_data = 0

### To use a specific name of UI directory where CRAB will create job to submit (with full path).
### the default directory will be "crab_0_data_time"
ui_working_dir = Phys14_720/DYJetsToEEMuMu_M-120To200_13TeV-madgraph

### To specify the UI directory where to store the CMS executable output
### FULL path is mandatory. Default is  <ui_working_dir>/res will be used.
#outputdir= /full/path/yourOutDir

### To specify the UI directory where to store the stderr, stdout and .BrokerInfo of submitted jobs
### FULL path is mandatory. Default is <ui_working_dir>/res will be used.
#logdir= /full/path/yourLogDir

### OUTPUT files INTO A SE
copy_data = 1

### if you want to copy data in a "official CMS site"
### you have to specify the name as written in 
storage_element = T2_IT_Bari
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
user_remote_dir = Phys14_720/DYJetsToEEMuMu_M-120To200_13TeV-madgraph


### if you want to copy your data at CAF
#storage_element = T2_CH_CAF
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = name_directory_you_want

### if you want to copy your data to your area in castor at cern
### or in a "not official CMS site" you have to specify the complete name of SE
#storage_element=srm-cms.cern.ch
### this directory is the mountpoin of SE 
#storage_path=/srm/managerv2?SFN=/castor/cern.ch/
### directory or tree of directory under the mounpoint 
#user_remote_dir = name_directory_you_want

#storage_element=storm-se-01.ba.infn.it
#return_data=0
#storage_port=8444
#user_remote_dir=/store/user/ndefilip/Signal/DYJetsToEEMuMu_M-120To200_13TeV-madgraph
#storage_path=/lustre/cms/store/user/ndefilip
#check_user_remote_dir = 0


### To publish produced output in a local istance of DBS set publish_data = 1
publish_data=0
### Specify the dataset name. The full path will be <primarydataset>/<publish_data_name>/USER
publish_data_name = CMSSW_3_6_1_patch4_RECO_Mu
### Specify the URL of DBS istance where CRAB has to publish the output files
#dbs_url_for_publication=  https://cmsdbsprod.cern.ch:8443/cms_dbs_ph_analysis_01_writer/servlet/DBSServlet

### To specify additional files to be put in InputSandBox
### write the full path  if the files are not in the current directory
### (wildcard * are allowed): comma separated list
#additional_input_files = file1, file2, /full/path/file3

#if server
#thresholdLevel = 100
#eMail = your@Email.address

[GRID]
# se_black_list=ru,kharkov

## RB/WMS management:
rb = CERN

##  Black and White Lists management:
## By Storage
#se_black_list = T0,T1
#se_white_list =

## By ComputingElement
#ce_black_list =
# ce_white_list = ba.infn.it
#ce_black_list=cclcgceli03.in2p3.fr, cclcgceli04.in2p3.fr

[CONDORG]

# Set this to condor to override the batchsystem defined in gridcat.
#batchsystem = condor

# Specify addition condor_g requirments
# use this requirment to run on a cms dedicated hardare
# globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))
# use this requirement to run on the new hardware
#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))

#[PBS]
#queue=local
